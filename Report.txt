Leonardo dos Santos Flórido & Gabriel Hall Abreu
Nmecº: 103360 & Nmecº:102851

No projeto utilizamos bytes como unidade default

#---------------------------------------------------------#
./netifstat.sh 10
please wait ...
 NETIF    TX    RX TRATE RRATE
enp3s0     0     0     0     0
    lo     0     0     0     0
  wlo1    32    33   3,2   3,3

Neste método usamos o comando "netstat -ie" e filtramos para obter as informações que queriamos.
Através da criação de uma array com essa informação calculamos TX e RX, e as respetivas taxas, de seguida damos print aos novos dados.

#---------------------------------------------------------#
./netifstat.sh -p 2 10
please wait ...
 NETIF    TX    RX TRATE RRATE
enp3s0     0     0     0     0
    lo     0     0     0     0

Neste método fazemos um ciclo for que pare consoante o input do utilizador e, assim, só dê print do numero desejado de interfaces

#---------------------------------------------------------# 
./netifstat.sh -t 10
please wait ...
 NETIF    TX    RX TRATE RRATE
  wlo1    31    32   3,1   3,2
    lo     0     0     0     0
enp3s0     0     0     0     0

Tendo como base o primeiro método.
Aqui criamos uma associative array com as a key = TX.
De seguida fazemos uma array com as keys e damos sort em reverse a essa array.
Por ultimo a partir da nova array com as sorted keys vamos dar print pela ordem estabelecida nessa array.

#---------------------------------------------------------#
./netifstat.sh -r 10
please wait ...
 NETIF    TX    RX TRATE RRATE
  wlo1     6     7   0,6   0,7
    lo     0     0     0     0
enp3s0     0     0     0     0

Tendo como base o primeiro método.
Aqui criamos uma associative array com as a key = RX.
De seguida fazemos uma array com as keys e damos sort em reverse a essa array.
Por ultimo a partir da nova array com as sorted keys vamos dar print pela ordem estabelecida nessa array.

#---------------------------------------------------------#
./netifstat.sh -T 10
please wait ...
 NETIF    TX    RX TRATE RRATE
  wlo1    33    31   3,3   3,1
    lo     0     0     0     0
enp3s0     0     0     0     0

Tendo como base o primeiro método.
Aqui criamos uma associative array com as a key = trate.
De seguida fazemos uma array com as keys e damos sort em reverse a essa array.
Por ultimo a partir da nova array com as sorted keys vamos dar print pela ordem estabelecida nessa array.

#---------------------------------------------------------#
./netifstat.sh -R 10
please wait ...
 NETIF    TX    RX TRATE RRATE
  wlo1    33    31   3,3   3,1
    lo     0     0     0     0
enp3s0     0     0     0     0

Tendo como base o primeiro método.
Aqui criamos uma associative array com as a key = rrate.
De seguida fazemos uma array com as keys e damos sort em reverse a essa array.
Por ultimo a partir da nova array com as sorted keys vamos dar print pela ordem estabelecida nessa array.

#---------------------------------------------------------#
./netifstat.sh -v 10
please wait ...
 NETIF    TX    RX TRATE RRATE
  wlo1    32    31   3,2   3,1
    lo     0     0     0     0
enp3s0     0     0     0     0

Tendo como base o primeiro método.
Aqui criamos uma associative array com as a key = interface.
De seguida fazemos uma array com as keys e damos sort em reverse a essa array.
Por ultimo a partir da nova array com as sorted keys vamos dar print pela ordem estabelecida nessa array.

#---------------------------------------------------------#
./netifstat.sh -c "l.*" 10
please wait ...
NETIF    TX    RX TRATE RRATE
   lo     0     0     0     0

Tendo como base o primeiro método.
Utilizando o operador regex "=~" verificamos se existe alguma interface que se relacione com a expressão regex proposta pelo utilizador.


#---------------------------------------------------------# 
./netifstat.sh -l 10
please wait ...

 NETIF    TX    RX TRATE RRATE TXTOT RXTOT
enp3s0     0     0     0     0     0     0
  wlo1    44    45     4     4    48    50
    lo     0     0     0     0     0     0

 NETIF    TX    RX TRATE RRATE TXTOT RXTOT
enp3s0     0     0     0     0     0     0
  wlo1    44    45     4     4    92    95
    lo     0     0     0     0     0     0

 NETIF    TX    RX TRATE RRATE TXTOT RXTOT
enp3s0     0     0     0     0     0     0
  wlo1    44    45     4     4   136   140
    lo     0     0     0     0     0     0

Aqui criamos uma associative array que armazena os valores antigos de forma que seja possivel somar os novos valores.
Assim cada vez que são gerados novos valores existe a possibilidade de soma-los na array que armazena os valores.

#---------------------------------------------------------#
./netifstat.sh -b 10
please wait ...
 NETIF   TX/b   RX/b TRATE/b RRATE/b
enp3s0      0      0       0       0
    lo      0      0       0       0
  wlo1   3850   3000     385     300

Este método é igual ao primeiro.

#---------------------------------------------------------#
./netifstat.sh -k 10
please wait ...
 NETIF  TX/kb  RX/kb TRATE/kb RRATE/kb
enp3s0      0      0       0        0
    lo      0      0       0        0
  wlo1  7,097  7,903  0,7097   0,7903

Utilizamos o mesmo método do -b e convertemos os bytes em kilobytes

#---------------------------------------------------------#
./netifstat.sh -m 10
please wait ...
 NETIF    TX/mb    RX/mb  TRATE/mb  RRATE/mb
enp3s0        0        0         0         0
    lo        0        0         0         0
  wlo1  0,07346  0,07903  0,007346  0,007903

Utilizamos o mesmo método do -b e convertemos os bytes em megabytes

#---------------------------------------------------------#
   
   
   
